= Copter Lights

This Arduino sketch implements automatic, motion-sensitive running lights for a hex copter.

== Overview

I built a DJI F550 and wanted some cool running lights for it. I found NeoPixels at Adafruit Industries. 

Since I built the copter using an eight-channel Spektrum AR8000, and the DJI Naza-M v2 uses only seven channels, I had a spare channel, which I decided to use to control the running lights.

While shopping for parts I found the Analog Devices ADXL335 accelerometer and though it would be cool to have the lights change based on how the copter was moving.

Running lights can be set to off, on, or auto using a transmitter switch
* When the switch is in the "0" (off) position, the LEDs will be dark.
* When the switch is in the "1" (on) position, the LEDs strobe.
* When the switch is in the "2" (auto) position, the LEDs play the apppropriate sequence based on the output of the accelerometer.

== Hardware Requirements

This sketch runs on a Teensy 3.1.

http://www.pjrc.com/teensy/
https://www.adafruit.com/products/1625

It employs an Analog Devices ADXL335 accelerometer.

http://www.analog.com/en/sensors/inertial-sensors/adxl335/products/product.html
https://www.adafruit.com/products/163

The LEDs are Flora RGB Smart NeoPixels from Adafruit Industries.

https://www.adafruit.com/products/1260

You will also need a three-pin female connecter compatible with your RC receiver.

== Hardware Configuration

Wiring the receiver lead to the Teensy
* The PWR lead goes to Vin on the Teensy.
* The GND lead goes to GND on the Teensy.
* The SIG lead goes to pin 2 on the Teensy.

Wiring the ADXL335 to the Teensy
* The Vin pin is connected to Vin on the Teensy.
* The GND ipn is connected to GND on the Teensy.
* The Xout, Yout, and Zout pins are connected to three analog inputs on the Teensy: A0, A1, and A2, repectively.
* The Vo pin is connected to the AREF pin of the Teensy.

Wiring the NeoPixels to the Teensy
* Pin 6 on the Teensy is connected to the data in pin of the first NeoPixel.
* Each further NeoPixel is chained in similar fashion from the previous.

== Setup
* Construct the device according to the schematic.
* Find the calibration values using the method described at https://learn.adafruit.com/adafruit-analog-accelerometer-breakouts and enter them in the appropriate place in the code.
* Configure your transmitter to assign a three-position switch to the output channel where the device is plugged in.
* Use 3M foam tape to mount the ADXL335 on top of the CPU on the Teensy
* Mount the assembly onto your copter. The three axes of the ADXL225 must be exactly aligned with the axes of the copter: Z goes up, Y goes forward, X goes left.

= Conclusions

It was eerily, almost suspiciously easy to make this thing. It took longer to talk myself into spending the fifty bucks on the parts than it did to get the prototype wired together and working.

The device ends up being pretty noisy. Consider sheilding it in some way. I ended up making a tiny pouch out of metalized plastic film.

= Acknowledgements
The ADXL255 code was mostly cribbed from the example at adafruit.com.

I looked at http://rcarduino.blogspot.com/ with the expectation of finding some example code for reading an RC receiver, but the blog is so soul-crushingly disorganized that I never really found a complete codebase from which to start.
This is a travesty, becuase the blog's author clearly knows what they're doing, but they have the organizational skills of a planarian.
In the end, I simply used pulseIn() because reading the control pin doesn't need to happen quickly. I may have gotten the idea so use it from http://rcarduino.blogspot.com/ but I can't be sure. ;-)
